package bot

import (
"errors"
	"fmt"
	"reflect"
	"sort"
"strings"
	"sync"
"testing"
	"time"
)

var (
channel     string
	replies     chan string
	cmdError    chan string
user        *User
	msgs        []string
errs        []string
protoParams interface{}
)

const (
expectedMsg    = "msg"
	cmd            = "cmd"
cmdDescription = "Command description"
cmdExampleArgs = "arg1 arg2"
)

func waitMessages(t *testing.T, count int, errorCount int) {
for {
		select {
case reply := <-replies:
msgs = append(msgs, reply)
		case err := <-cmdError:
errs = append(errs, err)
		case <-time.After(1 * time.Second):
t.Error("Timeout waiting for messages")
t.Errorf("msgs received: %v", msgs)
			t.Errorf("errs received: %v", errs)
t.Fatal()
		}
if len(msgs) == count && len(errs) == errorCount {
			return
}
	}
}

func responseHandler(target string, message string, sender *User) {
